

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Sep 30 02:21:07 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4520 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTBbits	set	3969
    51  0000                     _INTCON2bits	set	4081
    52  0000                     _INTCONbits	set	4082
    53  0000                     _RCONbits	set	4048
    54  0000                     _T0CONbits	set	4053
    55  0000                     _LATBbits	set	3978
    56  0000                     _TRISBbits	set	3987
    57  0000                     _OSCCONbits	set	4051
    58                           
    59                           ; #config settings
    60  0000                     
    61                           	psect	cinit
    62  0001D8                     __pcinit:
    63                           	opt stack 0
    64  0001D8                     start_initialization:
    65                           	opt stack 0
    66  0001D8                     __initialization:
    67                           	opt stack 0
    68                           
    69                           ; Clear objects allocated to COMRAM (3 bytes)
    70  0001D8  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
    71  0001DA  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
    72  0001DC  6A21               	clrf	__pbssCOMRAM& (0+255),c
    73  0001DE                     end_of_initialization:
    74                           	opt stack 0
    75  0001DE                     __end_of__initialization:
    76                           	opt stack 0
    77  0001DE  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78  0001E0  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79  0001E2  0100               	movlb	0
    80  0001E4  EF57  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssCOMRAM
    83  000021                     __pbssCOMRAM:
    84                           	opt stack 0
    85  000021                     _button_press:
    86                           	opt stack 0
    87  000021                     	ds	1
    88  000022                     _button_count:
    89                           	opt stack 0
    90  000022                     	ds	1
    91  000023                     _blink_count:
    92                           	opt stack 0
    93  000023                     	ds	1
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt stack 0
    98  000001                     ??_high_isr:
    99  000001                     
   100                           ; 1 bytes @ 0x0
   101  000001                     	ds	14
   102  00000F                     ??_low_isr:
   103                           
   104                           ; 1 bytes @ 0xE
   105  00000F                     	ds	17
   106  000020                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x1F
   109  000020                     	ds	1
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 14 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   130 ;;      Params:         0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0
   132 ;;      Temps:          1       0       0       0       0       0       0
   133 ;;      Totals:         1       0       0       0       0       0       0
   134 ;;Total ram usage:        1 bytes
   135 ;; Hardware stack levels required when called:    2
   136 ;; This function calls:
   137 ;;		Nothing
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144  0000AE                     __ptext0:
   145                           	opt stack 0
   146  0000AE                     _main:
   147                           	opt stack 29
   148                           
   149                           ;main.c: 16: OSCCONbits.IRCF = 0x07;
   150                           
   151                           ;incstack = 0
   152  0000AE  88D3               	bsf	4051,4,c	;volatile
   153  0000B0  8AD3               	bsf	4051,5,c	;volatile
   154  0000B2  8CD3               	bsf	4051,6,c	;volatile
   155                           
   156                           ;main.c: 17: OSCCONbits.SCS = 0x03;
   157  0000B4  0E03               	movlw	3
   158  0000B6  12D3               	iorwf	4051,f,c	;volatile
   159  0000B8                     l25:
   160  0000B8  A4D3               	btfss	4051,2,c	;volatile
   161  0000BA  D7FE               	goto	l25
   162                           
   163                           ;main.c: 21: TRISBbits.RB7=0;
   164  0000BC  9E93               	bcf	3987,7,c	;volatile
   165                           
   166                           ;main.c: 22: TRISBbits.RB6=0;
   167  0000BE  9C93               	bcf	3987,6,c	;volatile
   168                           
   169                           ;main.c: 24: TRISBbits.RB1=1;
   170  0000C0  8293               	bsf	3987,1,c	;volatile
   171                           
   172                           ;main.c: 25: LATBbits.LB7 = 0;
   173  0000C2  9E8A               	bcf	3978,7,c	;volatile
   174                           
   175                           ;main.c: 26: LATBbits.LB6 = 0;
   176  0000C4  9C8A               	bcf	3978,6,c	;volatile
   177                           
   178                           ;main.c: 28: T0CONbits.TMR0ON=0;
   179  0000C6  9ED5               	bcf	4053,7,c	;volatile
   180                           
   181                           ;main.c: 29: T0CONbits.T08BIT=1;
   182  0000C8  8CD5               	bsf	4053,6,c	;volatile
   183                           
   184                           ;main.c: 30: T0CONbits.T0CS = 0;
   185  0000CA  9AD5               	bcf	4053,5,c	;volatile
   186                           
   187                           ;main.c: 31: T0CONbits.PSA = 0;
   188  0000CC  96D5               	bcf	4053,3,c	;volatile
   189                           
   190                           ;main.c: 32: T0CONbits.T0PS=2;
   191  0000CE  50D5               	movf	4053,w,c	;volatile
   192  0000D0  0BF8               	andlw	-8
   193  0000D2  0902               	iorlw	2
   194  0000D4  6ED5               	movwf	4053,c	;volatile
   195                           
   196                           ;main.c: 34: RCONbits.IPEN = 1;
   197  0000D6  8ED0               	bsf	4048,7,c	;volatile
   198                           
   199                           ;main.c: 35: INTCONbits.T0IE=1;
   200  0000D8  8AF2               	bsf	intcon,5,c	;volatile
   201                           
   202                           ;main.c: 36: INTCON2bits.TMR0IP=1;
   203  0000DA  84F1               	bsf	intcon2,2,c	;volatile
   204                           
   205                           ;main.c: 37: INTCONbits.GIEH = 1;
   206  0000DC  8EF2               	bsf	intcon,7,c	;volatile
   207                           
   208                           ;main.c: 38: INTCONbits.GIEL = 1;
   209  0000DE  8CF2               	bsf	intcon,6,c	;volatile
   210                           
   211                           ;main.c: 40: T0CONbits.TMR0ON=1;
   212  0000E0  8ED5               	bsf	4053,7,c	;volatile
   213  0000E2                     l662:
   214                           
   215                           ;main.c: 44: if(blink_count >= 200){
   216  0000E2  0EC7               	movlw	199
   217  0000E4  6423               	cpfsgt	_blink_count,c
   218  0000E6  D010               	goto	l668
   219                           
   220                           ;main.c: 45: LATBbits.LB7 = ~LATBbits.LB7;
   221  0000E8  AE8A               	btfss	3978,7,c	;volatile
   222  0000EA  D002               	goto	u30
   223  0000EC  0E01               	movlw	1
   224  0000EE  D001               	goto	u36
   225  0000F0                     u30:
   226  0000F0  0E00               	movlw	0
   227  0000F2                     u36:
   228  0000F2  0AFF               	xorlw	255
   229  0000F4  6E20               	movwf	??_main& (0+255),c
   230  0000F6  3220               	rrcf	??_main,f,c
   231  0000F8  3220               	rrcf	??_main,f,c
   232  0000FA  508A               	movf	3978,w,c	;volatile
   233  0000FC  1820               	xorwf	??_main,w,c
   234  0000FE  0B7F               	andlw	-129
   235  000100  1820               	xorwf	??_main,w,c
   236  000102  6E8A               	movwf	3978,c	;volatile
   237                           
   238                           ;main.c: 46: blink_count = 0;
   239  000104  0E00               	movlw	0
   240  000106  6E23               	movwf	_blink_count,c
   241  000108                     l668:
   242                           
   243                           ;main.c: 47: }
   244                           ;main.c: 48: if(!button_press){
   245  000108  5021               	movf	_button_press,w,c
   246  00010A  B4D8               	btfsc	status,2,c
   247                           
   248                           ;main.c: 49: if(PORTBbits.RB1){
   249  00010C  A281               	btfss	3969,1,c	;volatile
   250  00010E  D002               	goto	l30
   251                           
   252                           ;main.c: 50: button_press = 1;
   253  000110  0E01               	movlw	1
   254  000112  6E21               	movwf	_button_press,c
   255  000114                     l30:
   256                           
   257                           ;main.c: 51: }
   258                           ;main.c: 52: }
   259                           ;main.c: 53: if(button_press){
   260  000114  5021               	movf	_button_press,w,c
   261  000116  B4D8               	btfsc	status,2,c
   262  000118  D7E4               	goto	l662
   263                           
   264                           ;main.c: 54: if(button_count >= 80){
   265  00011A  0E4F               	movlw	79
   266  00011C  6422               	cpfsgt	_button_count,c
   267  00011E  D7E1               	goto	l662
   268                           
   269                           ;main.c: 55: if(PORTBbits.RB1){
   270  000120  A281               	btfss	3969,1,c	;volatile
   271  000122  D013               	goto	l684
   272                           
   273                           ;main.c: 56: LATBbits.LB6 = ~LATBbits.LB6;
   274  000124  AC8A               	btfss	3978,6,c	;volatile
   275  000126  D002               	goto	u90
   276  000128  0E01               	movlw	1
   277  00012A  D001               	goto	u96
   278  00012C                     u90:
   279  00012C  0E00               	movlw	0
   280  00012E                     u96:
   281  00012E  0AFF               	xorlw	255
   282  000130  6E20               	movwf	??_main& (0+255),c
   283  000132  3A20               	swapf	??_main,f,c
   284  000134  4620               	rlncf	??_main,f,c
   285  000136  4620               	rlncf	??_main,f,c
   286  000138  508A               	movf	3978,w,c	;volatile
   287  00013A  1820               	xorwf	??_main,w,c
   288  00013C  0BBF               	andlw	-65
   289  00013E  1820               	xorwf	??_main,w,c
   290  000140  6E8A               	movwf	3978,c	;volatile
   291  000142  D003               	goto	l684
   292  000144                     l682:
   293                           
   294                           ;main.c: 58: button_count = 0;
   295  000144  0E00               	movlw	0
   296  000146  6E22               	movwf	_button_count,c
   297                           
   298                           ;main.c: 59: }else{
   299  000148  D7CC               	goto	l662
   300  00014A                     l684:
   301                           
   302                           ;main.c: 60: button_press = 0;
   303  00014A  0E00               	movlw	0
   304  00014C  6E21               	movwf	_button_press,c
   305  00014E  D7FA               	goto	l682
   306  000150                     __end_of_main:
   307                           	opt stack 0
   308                           intcon	equ	0xFF2
   309                           intcon2	equ	0xFF1
   310                           status	equ	0xFD8
   311                           
   312 ;; *************** function _low_isr *****************
   313 ;; Defined at:
   314 ;;		line 82 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		None
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   328 ;;      Params:         0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0
   330 ;;      Temps:         17       0       0       0       0       0       0
   331 ;;      Totals:        17       0       0       0       0       0       0
   332 ;;Total ram usage:       17 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; Hardware stack levels required when called:    1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		Interrupt level 1
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	intcodelo
   343  000018                     __pintcodelo:
   344                           	opt stack 0
   345  000018                     _low_isr:
   346                           	opt stack 29
   347                           
   348                           ;incstack = 0
   349  000018  8024               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   350  00001A  CFD8 F00F          	movff	status,??_low_isr
   351  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
   352  000022  CFE0 F011          	movff	bsr,??_low_isr+2
   353  000026  CFFA F012          	movff	pclath,??_low_isr+3
   354  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
   355  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
   356  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
   357  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
   358  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
   359  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
   360  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
   361  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
   362  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
   363  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
   364  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
   365  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
   366  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
   367                           
   368                           ;main.c: 83: INTCONbits.GIEH = 0;
   369  00005E  9EF2               	bcf	intcon,7,c	;volatile
   370                           
   371                           ;main.c: 84: INTCONbits.GIEH = 1;
   372  000060  8EF2               	bsf	intcon,7,c	;volatile
   373  000062  C01F  FFF5         	movff	??_low_isr+16,tablat
   374  000066  C01E  FFF8         	movff	??_low_isr+15,tblptru
   375  00006A  C01D  FFF7         	movff	??_low_isr+14,tblptrh
   376  00006E  C01C  FFF6         	movff	??_low_isr+13,tblptrl
   377  000072  C01B  FFF4         	movff	??_low_isr+12,prodh
   378  000076  C01A  FFF3         	movff	??_low_isr+11,prodl
   379  00007A  C019  FFDA         	movff	??_low_isr+10,fsr2h
   380  00007E  C018  FFD9         	movff	??_low_isr+9,fsr2l
   381  000082  C017  FFE2         	movff	??_low_isr+8,fsr1h
   382  000086  C016  FFE1         	movff	??_low_isr+7,fsr1l
   383  00008A  C015  FFEA         	movff	??_low_isr+6,fsr0h
   384  00008E  C014  FFE9         	movff	??_low_isr+5,fsr0l
   385  000092  C013  FFFB         	movff	??_low_isr+4,pclatu
   386  000096  C012  FFFA         	movff	??_low_isr+3,pclath
   387  00009A  C011  FFE0         	movff	??_low_isr+2,bsr
   388  00009E  C010  FFE8         	movff	??_low_isr+1,wreg
   389  0000A2  C00F  FFD8         	movff	??_low_isr,status
   390  0000A6  9024               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   391  0000A8  0010               	retfie	
   392  0000AA                     __end_of_low_isr:
   393                           	opt stack 0
   394                           pclatu	equ	0xFFB
   395                           pclath	equ	0xFFA
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           prodh	equ	0xFF4
   401                           prodl	equ	0xFF3
   402                           intcon	equ	0xFF2
   403                           intcon2	equ	0xFF1
   404                           fsr0h	equ	0xFEA
   405                           fsr0l	equ	0xFE9
   406                           wreg	equ	0xFE8
   407                           fsr1h	equ	0xFE2
   408                           fsr1l	equ	0xFE1
   409                           bsr	equ	0xFE0
   410                           fsr2h	equ	0xFDA
   411                           fsr2l	equ	0xFD9
   412                           status	equ	0xFD8
   413                           
   414 ;; *************** function _high_isr *****************
   415 ;; Defined at:
   416 ;;		line 68 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0
   432 ;;      Temps:         14       0       0       0       0       0       0
   433 ;;      Totals:        14       0       0       0       0       0       0
   434 ;;Total ram usage:       14 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		Interrupt level 2
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	intcode
   444  000008                     __pintcode:
   445                           	opt stack 0
   446  000008                     _high_isr:
   447                           	opt stack 29
   448                           
   449                           ;incstack = 0
   450  000008  8224               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   451  00000A  EDA8  F000         	call	int_func,f	;refresh shadow registers
   452                           pclatu	equ	0xFFB
   453                           pclath	equ	0xFFA
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           prodh	equ	0xFF4
   459                           prodl	equ	0xFF3
   460                           intcon	equ	0xFF2
   461                           intcon2	equ	0xFF1
   462                           fsr0h	equ	0xFEA
   463                           fsr0l	equ	0xFE9
   464                           wreg	equ	0xFE8
   465                           fsr1h	equ	0xFE2
   466                           fsr1l	equ	0xFE1
   467                           bsr	equ	0xFE0
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8
   471                           
   472                           	psect	intcode_body
   473  000150                     __pintcode_body:
   474                           	opt stack 29
   475  000150                     int_func:
   476                           	opt stack 29
   477  000150  0006               	pop		; remove dummy address from shadow register refresh
   478  000152  CFFA F001          	movff	pclath,??_high_isr
   479  000156  CFFB F002          	movff	pclatu,??_high_isr+1
   480  00015A  CFE9 F003          	movff	fsr0l,??_high_isr+2
   481  00015E  CFEA F004          	movff	fsr0h,??_high_isr+3
   482  000162  CFE1 F005          	movff	fsr1l,??_high_isr+4
   483  000166  CFE2 F006          	movff	fsr1h,??_high_isr+5
   484  00016A  CFD9 F007          	movff	fsr2l,??_high_isr+6
   485  00016E  CFDA F008          	movff	fsr2h,??_high_isr+7
   486  000172  CFF3 F009          	movff	prodl,??_high_isr+8
   487  000176  CFF4 F00A          	movff	prodh,??_high_isr+9
   488  00017A  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   489  00017E  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   490  000182  CFF8 F00D          	movff	tblptru,??_high_isr+12
   491  000186  CFF5 F00E          	movff	tablat,??_high_isr+13
   492                           
   493                           ;main.c: 69: INTCONbits.GIEH = 0;
   494  00018A  9EF2               	bcf	intcon,7,c	;volatile
   495                           
   496                           ;main.c: 71: if(INTCONbits.TMR0IF){
   497  00018C  A4F2               	btfss	intcon,2,c	;volatile
   498  00018E  D005               	goto	i2l696
   499                           
   500                           ;main.c: 72: blink_count++;
   501  000190  2A23               	incf	_blink_count,f,c
   502                           
   503                           ;main.c: 73: if(button_press){
   504  000192  5021               	movf	_button_press,w,c
   505  000194  A4D8               	btfss	status,2,c
   506                           
   507                           ;main.c: 74: button_count++;
   508  000196  2A22               	incf	_button_count,f,c
   509                           
   510                           ;main.c: 75: }
   511                           ;main.c: 76: INTCONbits.TMR0IF = 0;
   512  000198  94F2               	bcf	intcon,2,c	;volatile
   513  00019A                     i2l696:
   514                           
   515                           ;main.c: 77: }
   516                           ;main.c: 79: INTCONbits.GIEH = 1;
   517  00019A  8EF2               	bsf	intcon,7,c	;volatile
   518  00019C  C00E  FFF5         	movff	??_high_isr+13,tablat
   519  0001A0  C00D  FFF8         	movff	??_high_isr+12,tblptru
   520  0001A4  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   521  0001A8  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   522  0001AC  C00A  FFF4         	movff	??_high_isr+9,prodh
   523  0001B0  C009  FFF3         	movff	??_high_isr+8,prodl
   524  0001B4  C008  FFDA         	movff	??_high_isr+7,fsr2h
   525  0001B8  C007  FFD9         	movff	??_high_isr+6,fsr2l
   526  0001BC  C006  FFE2         	movff	??_high_isr+5,fsr1h
   527  0001C0  C005  FFE1         	movff	??_high_isr+4,fsr1l
   528  0001C4  C004  FFEA         	movff	??_high_isr+3,fsr0h
   529  0001C8  C003  FFE9         	movff	??_high_isr+2,fsr0l
   530  0001CC  C002  FFFB         	movff	??_high_isr+1,pclatu
   531  0001D0  C001  FFFA         	movff	??_high_isr,pclath
   532  0001D4  9224               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   533  0001D6  0011               	retfie		f
   534  0001D8                     __end_of_high_isr:
   535                           	opt stack 0
   536  0000                     pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           prodh	equ	0xFF4
   543                           prodl	equ	0xFF3
   544                           intcon	equ	0xFF2
   545                           intcon2	equ	0xFF1
   546                           fsr0h	equ	0xFEA
   547                           fsr0l	equ	0xFE9
   548                           wreg	equ	0xFE8
   549                           fsr1h	equ	0xFE2
   550                           fsr1l	equ	0xFE1
   551                           bsr	equ	0xFE0
   552                           fsr2h	equ	0xFDA
   553                           fsr2l	equ	0xFD9
   554                           status	equ	0xFD8
   555                           pclatu	equ	0xFFB
   556                           pclath	equ	0xFFA
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           prodh	equ	0xFF4
   562                           prodl	equ	0xFF3
   563                           intcon	equ	0xFF2
   564                           intcon2	equ	0xFF1
   565                           fsr0h	equ	0xFEA
   566                           fsr0l	equ	0xFE9
   567                           wreg	equ	0xFE8
   568                           fsr1h	equ	0xFE2
   569                           fsr1l	equ	0xFE1
   570                           bsr	equ	0xFE0
   571                           fsr2h	equ	0xFDA
   572                           fsr2l	equ	0xFD9
   573                           status	equ	0xFD8
   574                           
   575                           	psect	rparam
   576  0000                     pclatu	equ	0xFFB
   577                           pclath	equ	0xFFA
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           prodh	equ	0xFF4
   583                           prodl	equ	0xFF3
   584                           intcon	equ	0xFF2
   585                           intcon2	equ	0xFF1
   586                           fsr0h	equ	0xFEA
   587                           fsr0l	equ	0xFE9
   588                           wreg	equ	0xFE8
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           bsr	equ	0xFE0
   592                           fsr2h	equ	0xFDA
   593                           fsr2l	equ	0xFD9
   594                           status	equ	0xFD8
   595                           
   596                           	psect	temp
   597  000024                     btemp:
   598                           	opt stack 0
   599  000024                     	ds	1
   600  0000                     int$flags	set	btemp
   601                           pclatu	equ	0xFFB
   602                           pclath	equ	0xFFA
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           prodh	equ	0xFF4
   608                           prodl	equ	0xFF3
   609                           intcon	equ	0xFF2
   610                           intcon2	equ	0xFF1
   611                           fsr0h	equ	0xFEA
   612                           fsr0l	equ	0xFE9
   613                           wreg	equ	0xFE8
   614                           fsr1h	equ	0xFE2
   615                           fsr1l	equ	0xFE1
   616                           bsr	equ	0xFE0
   617                           fsr2h	equ	0xFDA
   618                           fsr2l	equ	0xFD9
   619                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     32      35
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     20      23       1       27.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Sep 30 02:21:07 2018

                     l30 0114                       l25 00B8                       u30 00F0  
                     u36 00F2                       u90 012C                       u96 012E  
                     bsr 000FE0              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l662 00E2                      l682 0144  
                    l684 014A                      l668 0108             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   _main 00AE                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0024                     prodh 000FF4  
                   prodl 000FF3                     start 00AA            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  i2l696 019A            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
        __end_of_low_isr 00AA           __CFG_BOREN$OFF 000000                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 01D8  
           __end_of_main 0150                   ??_main 0020            __activetblptr 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 01D8           __CFG_STVREN$ON 000000  
              ??_low_isr 000F                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 01DE  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_high_isr 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 01D8                  __ramtop 0600                  __ptext0 00AE  
              _T0CONbits 000FD5                  _low_isr 0018               ??_high_isr 0001  
         __pintcode_body 0150     end_of_initialization 01DE                  int_func 0150  
              _PORTBbits 000F81                _TRISBbits 000F93      start_initialization 01D8  
       __CFG_OSC$INTIO67 000000         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0021  
      __size_of_high_isr 01D0             _button_count 0022             _button_press 0021  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008              __pintcodelo 0018  
            _blink_count 0023                 ?_low_isr 0001                 _LATBbits 000F8A  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000         __size_of_low_isr 0092  
               _high_isr 0008            __size_of_main 00A2                 int$flags 0024  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
             _OSCCONbits 000FD3  
